name: Test bleeding edge release

on:
  push:

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install -y flex bison ncurses-dev texinfo gcc gperf patch libtool automake g++ libncurses5-dev gawk subversion expat libexpat1-dev python-all-dev binutils-dev bc libcap-dev autoconf libgmp-dev build-essential pkg-config libmpc-dev libmpfr-dev autopoint gettext txt2man liblzma-dev libssl-dev libz-dev mercurial wget tar gcc-10 g++-10 cmake zstd ninja-build lz4 liblz4-tool liblz4-dev lzma --fix-broken --fix-missing
    - name: Build Vaisakh's cannon kernel
      run: |
        git clone --depth=1 https://github.com/mvaisakh/gcc-arm64.git gcc64 -b gcc-new
        git clone --depth=1 https://github.com/mvaisakh/gcc-arm.git gcc32 -b gcc-new
        git clone --depth=1 https://github.com/mvaisakh/kernel_xiaomi_cannon.git kernel


        export PATH=gcc32/bin/:gcc64/bin/:$PATH

        echo $PATH

        export ARCH=arm64
        cd kernel/
        mkdir out
        make O=out cannon_user_defconfig

        make -j$(nproc --all) O=out \
            CROSS_COMPILE_ARM32=arm-eabi- \
            CROSS_COMPILE=aarch64-elf- \
            AR=aarch64-elf-ar \
            OBJDUMP=aarch64-elf-objdump \
            STRIP=aarch64-elf-strip

